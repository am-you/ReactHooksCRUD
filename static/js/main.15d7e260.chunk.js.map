{"version":3,"sources":["forms/AddUserForm.js","forms/EditUserForm.js","tables/UserTable.js","App.js","index.js"],"names":["AddUserForm","props","initialFormState","id","name","username","useState","user","setUser","handleInputChange","event","target","value","onSubmit","preventDefault","addUser","type","onChange","EditUserForm","currentUser","useEffect","updateUser","onClick","setEditing","className","UserTable","users","length","map","key","editRow","deleteUser","colSpan","App","setUsers","setCurrentUser","editing","src","alt","height","width","updatedUser","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15d7e260.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst AddUserForm = props => {\n\tconst initialFormState = { id: null, name: '', username: '' };\n\tconst [ user, setUser ] = useState(initialFormState);\n\n\tconst handleInputChange = event => {\n\t\tconst { name, value } = event.target;\n\n\t\tsetUser({ ...user, [name]: value })\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<form\n\t\t\t\tonSubmit={event => {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tif (!user.name || !user.username) return;\n\n\t\t\t\t\tprops.addUser(user);\n\t\t\t\t\tsetUser(initialFormState)\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<label>Name</label>\n\t\t\t\t<input type=\"text\" name=\"name\" value={user.name} onChange={handleInputChange} />\n\t\t\t\t<label>Username</label>\n\t\t\t\t<input type=\"text\" name=\"username\" value={user.username} onChange={handleInputChange} />\n\t\t\t\t<button>Add new user</button>\n\t\t\t</form>\n\t\t</div>\n\n\t)\n};\n\nexport default AddUserForm;\n","import React, { useState, useEffect } from 'react';\n\nconst EditUserForm = props => {\n    const [ user, setUser ] = useState(props.currentUser);\n\n    useEffect(\n        () => {\n            setUser(props.currentUser)\n        },\n        [ props ]\n    );\n    // You can tell React to skip applying an effect if certain values havenâ€™t changed between re-renders. [ props ]\n\n    const handleInputChange = event => {\n        const { name, value } = event.target;\n\n        setUser({ ...user, [name]: value })\n    };\n\n    return (\n        <div>\n            <form\n                onSubmit={event => {\n                    event.preventDefault();\n\n                    props.updateUser(user.id, user)\n                }}\n            >\n                <label>Name</label>\n                <input type=\"text\" name=\"name\" value={user.name} onChange={handleInputChange} />\n                <label>Username</label>\n                <input type=\"text\" name=\"username\" value={user.username} onChange={handleInputChange} />\n                <button>Update user</button>\n                <button onClick={() => props.setEditing(false)} className=\"muted-button\">\n                    Cancel\n                </button>\n            </form>\n        </div>\n\n    )\n};\n\nexport default EditUserForm;\n","import React from 'react';\n\nconst UserTable = props => (\n    <div>\n        <table>\n            <thead>\n            <tr>\n                <th>Name</th>\n                <th>Username</th>\n                <th>Actions</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.users.length > 0 ? (\n                props.users.map(user => (\n                    <tr key={user.id}>\n                        <td>{user.name}</td>\n                        <td>{user.username}</td>\n                        <td>\n                            <button\n                                onClick={() => {\n                                    props.editRow(user)\n                                }}\n                                className=\"muted-button\"\n                            >\n                                Edit\n                            </button>\n                            <button\n                                onClick={() => props.deleteUser(user.id)}\n                                className=\"muted-button\"\n                            >\n                                Delete\n                            </button>\n                        </td>\n                    </tr>\n                ))\n            ) : (\n                <tr>\n                    <td colSpan={3}>No users</td>\n                </tr>\n            )}\n            </tbody>\n        </table>\n    </div>\n\n);\n\nexport default UserTable;\n","import React, { useState, Fragment } from 'react';\nimport AddUserForm from './forms/AddUserForm';\nimport EditUserForm from './forms/EditUserForm';\nimport UserTable from './tables/UserTable';\n\nconst App = () => {\n\t// Data\n\tconst usersData = [\n\t\t{ id: 1, name: 'Amine', username: 'amyou' },\n\t\t{ id: 2, name: 'Test1', username: 'CowboyBebop' },\n\t\t{ id: 3, name: 'Test2', username: 'Guts' },\n\t];\n\n\tconst initialFormState = { id: null, name: '', username: '' };\n\n\t// Setting state\n\tconst [ users, setUsers ] = useState(usersData);\n\tconst [ currentUser, setCurrentUser ] = useState(initialFormState);\n\tconst [ editing, setEditing ] = useState(false);\n\n\t// CRUD operations\n\tconst addUser = user => {\n\t\tuser.id = users.length + 1;\n\t\tsetUsers([ ...users, user ])\n\t};\n\n\tconst deleteUser = id => {\n\t\tsetEditing(false);\n\n\t\tsetUsers(users.filter(user => user.id !== id))\n\t};\n\n\tconst updateUser = (id, updatedUser) => {\n\t\tsetEditing(false);\n\n\t\tsetUsers(users.map(user => (user.id === id ? updatedUser : user)))\n\t};\n\n\tconst editRow = user => {\n\t\tsetEditing(true);\n\n\t\tsetCurrentUser({ id: user.id, name: user.name, username: user.username })\n\t};\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<img src=\"avataaars.png\" alt=\"logo\" height=\"280\" width=\"264\" className=\"logo\"/>\n\t\t\t<h1>React Hooks CRUD</h1>\n\t\t\t<div>\n\t\t\t\t<div className=\"userEdit\">\n\t\t\t\t\t{editing ? (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<h2>Edit user</h2>\n\t\t\t\t\t\t\t<EditUserForm\n\t\t\t\t\t\t\t\tediting={editing}\n\t\t\t\t\t\t\t\tsetEditing={setEditing}\n\t\t\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\t\t\tupdateUser={updateUser}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<h2>Add user</h2>\n\t\t\t\t\t\t\t<AddUserForm addUser={addUser} />\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"userEdit\">\n\t\t\t\t\t<h2>View users</h2>\n\t\t\t\t\t<UserTable users={users} editRow={editRow} deleteUser={deleteUser} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}